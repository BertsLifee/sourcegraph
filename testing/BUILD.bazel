sh_test(
    name = "backend_integration_test",
    srcs = [":backend_integration_test.sh"],
    args = [
        "$(location //enterprise/cmd/server:image_tarball)",  # image we're testing against
        "server:candidate",
        "$(location //dev/gqltest:gqltest_test)",  # actual test
        "$(location //dev/authtest:authtest_test)",  # actual test
    ],
    data = [
        "//dev/authtest:authtest_test",
        "//dev/gqltest:gqltest_test",
        "//enterprise/cmd/server:image_tarball",
    ],
    env = {
        "SG_FEATURE_FLAG_GRPC": "false",
    },
    env_inherit = [
        "AWS_ACCESS_KEY_ID",
        "AWS_CODE_COMMIT_PASSWORD",
        "AWS_CODE_COMMIT_USERNAME",
        "AWS_SECRET_ACCESS_KEY",
        "AZURE_DEVOPS_TOKEN",
        "AZURE_DEVOPS_USERNAME",
        "BITBUCKET_SERVER_TOKEN",
        "BITBUCKET_SERVER_URL",
        "BITBUCKET_SERVER_USERNAME",
        "GHE_GITHUB_TOKEN",
        "PERFORCE_PASSWORD",
        "PERFORCE_PORT",
        "PERFORCE_USER",
        "SOURCEGRAPH_LICENSE_GENERATION_KEY",
        "SOURCEGRAPH_LICENSE_KEY",
    ],
    tags = ["requires-network"],
    deps = ["//testing/tools:integration_runner"],
)

sh_test(
    name = "e2e_test",
    srcs = [":e2e_test.sh"],
    args = [
        "$(location //enterprise/cmd/server:image_tarball)",  # image we're testing against
        "server:candidate",
        "$(location //client/web/src/end-to-end:e2e)",  # actual test
    ],
    data = [
        "//client/web/src/end-to-end:e2e",
        "//enterprise/cmd/server:image_tarball",
    ],
    env = {
        "SG_FEATURE_FLAG_GRPC": "false",
    },
    env_inherit = [
        "AWS_ACCESS_KEY_ID",
        "AWS_CODE_COMMIT_PASSWORD",
        "AWS_CODE_COMMIT_USERNAME",
        "AWS_SECRET_ACCESS_KEY",
        "AZURE_DEVOPS_TOKEN",
        "AZURE_DEVOPS_USERNAME",
        "BITBUCKET_SERVER_TOKEN",
        "BITBUCKET_SERVER_URL",
        "BITBUCKET_SERVER_USERNAME",
        "E2E_HEADLESS",
        "E2E_SOURCEGRAPH_BASE_URL",
        "GHE_GITHUB_TOKEN",
        "GH_TOKEN",
        "PERFORCE_PASSWORD",
        "PERFORCE_PORT",
        "PERFORCE_USER",
        "SOURCEGRAPH_LICENSE_GENERATION_KEY",
        "SOURCEGRAPH_LICENSE_KEY",
    ],
    tags = ["requires-network"],
    deps = ["//testing/tools:integration_runner"],
)
